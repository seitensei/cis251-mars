Messages
=========================
SPIM Version 6.2 of January 6 1999
Copyright 1990-1998 by James R. Larus (larus@cs.wisc.edu).
All Rights Reserved.
DOS and Windows ports by David A. Carley (dac@cs.wisc.edu).
Copyright 1997 by Morgan Kaufmann Publishers, Inc.
See the file README for a full copyright notice.
Loaded: C:\backup\Documents\Courses\251\lecture material 2011\trap.handler
Memory and registers have been cleared, and the simulator reinitialized.

C:\backup\Documents\Courses\251\lecture material 2011\Primitive Data\bytes.s has been successfully loaded


Registers
=========================
 PC     = 00400000     EPC    = 00000000     Cause  = 00000000     BadVAddr= 00000000
 Status = 00000000     HI     = 00000000     LO     = 00000000
                                 General Registers
R0  (r0) = 00000000  R8  (t0) = 00000000  R16 (s0) = 00000000  R24 (t8) = 00000000
R1  (at) = 00000000  R9  (t1) = 00000000  R17 (s1) = 00000000  R25 (t9) = 00000000
R2  (v0) = 00000000  R10 (t2) = 00000000  R18 (s2) = 00000000  R26 (k0) = 00000000
R3  (v1) = 00000000  R11 (t3) = 00000000  R19 (s3) = 00000000  R27 (k1) = 00000000
R4  (a0) = 00000000  R12 (t4) = 00000000  R20 (s4) = 00000000  R28 (gp) = 10008000
R5  (a1) = 00000000  R13 (t5) = 00000000  R21 (s5) = 00000000  R29 (sp) = 7fffeffc
R6  (a2) = 00000000  R14 (t6) = 00000000  R22 (s6) = 00000000  R30 (s8) = 00000000
R7  (a3) = 00000000  R15 (t7) = 00000000  R23 (s7) = 00000000  R31 (ra) = 00000000
                              Double Floating Point Registers
FP0  = 0.000000      FP8  = 0.000000      FP16 = 0.000000      FP24 = 0.000000     
FP2  = 0.000000      FP10 = 0.000000      FP18 = 0.000000      FP26 = 0.000000     
FP4  = 0.000000      FP12 = 0.000000      FP20 = 0.000000      FP28 = 0.000000     
FP6  = 0.000000      FP14 = 0.000000      FP22 = 0.000000      FP30 = 0.000000     
                              Single Floating Point Registers
FP0  = 0.000000      FP8  = 0.000000      FP16 = 0.000000      FP24 = 0.000000     
FP1  = 0.000000      FP9  = 0.000000      FP17 = 0.000000      FP25 = 0.000000     
FP2  = 0.000000      FP10 = 0.000000      FP18 = 0.000000      FP26 = 0.000000     
FP3  = 0.000000      FP11 = 0.000000      FP19 = 0.000000      FP27 = 0.000000     
FP4  = 0.000000      FP12 = 0.000000      FP20 = 0.000000      FP28 = 0.000000     
FP5  = 0.000000      FP13 = 0.000000      FP21 = 0.000000      FP29 = 0.000000     
FP6  = 0.000000      FP14 = 0.000000      FP22 = 0.000000      FP30 = 0.000000     
FP7  = 0.000000      FP15 = 0.000000      FP23 = 0.000000      FP31 = 0.000000     


Console
=========================


Text Segment
=========================
[0x00400000]        0x8fa40000  lw $4, 0($29)                   ; 102: lw $a0, 0($sp)
[0x00400004]        0x27a50004  addiu $5, $29, 4                ; 103: addiu $a1, $sp, 4 # argv
[0x00400008]        0x24a60004  addiu $6, $5, 4                 ; 104: addiu $a2, $a1, 4 # envp
[0x0040000c]        0x00041080  sll $2, $4, 2                   ; 105: sll $v0, $a0, 2
[0x00400010]        0x00c23021  addu $6, $6, $2                 ; 106: addu $a2, $a2, $v0
[0x00400014]        0x0c100008  jal 0x00400020 [main]           ; 107: jal main
[0x00400018]        0x3402000a  ori $2, $0, 10                  ; 108: li $v0 10
[0x0040001c]        0x0000000c  syscall                         ; 109: syscall
[0x00400020]        0x3402000a  ori $2, $0, 10                  ; 19: li      $v0, 10
[0x00400024]        0x0000000c  syscall                         ; 20: syscall

        KERNEL
[0x80000080]        0x0001d821  addu $27, $0, $1                ; 57: move $k1 $at
[0x80000084]        0x3c019000  lui $1, -28672                  ; 59: sw $v0 s1        # Not re-entrent and we can't trust $sp
[0x80000088]        0xac2201f8  sw $2, 504($1)
[0x8000008c]        0x3c019000  lui $1, -28672                  ; 60: sw $a0 s2
[0x80000090]        0xac2401fc  sw $4, 508($1)
[0x80000094]        0x401a6800  mfc0 $26, $13                   ; 61: mfc0 $k0 $13
[0x80000098]        0x34010044  ori $1, $0, 68                  ; 62: sgt $v0 $k0 0x44 # ignore interrupt exceptions
[0x8000009c]        0x003a102a  slt $2, $1, $26
[0x800000a0]        0x1c400019  bgtz $2 100 [ret-0x800000a0]    ; 63: bgtz $v0 ret
[0x800000a4]        0x24000000  addiu $0, $0, 0                 ; 64: addu $0 $0 0
[0x800000a8]        0x34020004  ori $2, $0, 4                   ; 65: li $v0 4        # syscall 4 (print_str)
[0x800000ac]        0x3c049000  lui $4, -28672 [__m1_]          ; 66: la $a0 __m1_
[0x800000b0]        0x0000000c  syscall                         ; 67: syscall
[0x800000b4]        0x34020001  ori $2, $0, 1                   ; 68: li $v0 1        # syscall 1 (print_int)
[0x800000b8]        0x001a2082  srl $4, $26, 2                  ; 69: srl $a0 $k0 2
[0x800000bc]        0x0000000c  syscall                         ; 70: syscall
[0x800000c0]        0x34020004  ori $2, $0, 4                   ; 71: li $v0 4        # syscall 4 (print_str)
[0x800000c4]        0x3c019000  lui $1, -28672                  ; 72: lw $a0 __excp($k0)
[0x800000c8]        0x003a0821  addu $1, $1, $26
[0x800000cc]        0x8c2401b0  lw $4, 432($1)
[0x800000d0]        0x0000000c  syscall                         ; 73: syscall
[0x800000d4]        0x34010018  ori $1, $0, 24                  ; 74: bne $k0 0x18 ok_pc
[0x800000d8]        0x143a0006  bne $1, $26, 24 [ok_pc-0x800000d8]
[0x800000dc]        0x40047000  mfc0 $4, $14                    ; 75: mfc0 $a0, $14
[0x800000e0]        0x30840003  andi $4, $4, 3                  ; 76: and $a0, $a0, 0x3 # Is EPC word-aligned?
[0x800000e4]        0x10040003  beq $0, $4, 12 [ok_pc-0x800000e4]; 77: beq $a0, 0, ok_pc
[0x800000e8]        0x3402000a  ori $2, $0, 10                  ; 78: li $v0 10        # Exit on really bad PC (out of text)
[0x800000ec]        0x0000000c  syscall                         ; 79: syscall
[0x800000f0]        0x34020004  ori $2, $0, 4                   ; 82: li $v0 4        # syscall 4 (print_str)
[0x800000f4]        0x3c019000  lui $1, -28672 [__m2_]          ; 83: la $a0 __m2_
[0x800000f8]        0x3424000d  ori $4, $1, 13 [__m2_]
[0x800000fc]        0x0000000c  syscall                         ; 84: syscall
[0x80000100]        0x40806800  mtc0 $0, $13                    ; 85: mtc0 $0, $13
[0x80000104]        0x3c019000  lui $1, -28672                  ; 86: lw $v0 s1
[0x80000108]        0x8c2201f8  lw $2, 504($1)
[0x8000010c]        0x3c019000  lui $1, -28672                  ; 87: lw $a0 s2
[0x80000110]        0x8c2401fc  lw $4, 508($1)
[0x80000114]        0x401a7000  mfc0 $26, $14                   ; 88: mfc0 $k0 $14
[0x80000118]        0x001b0821  addu $1, $0, $27                ; 90: move $at $k1
[0x8000011c]        0x42000010  rfe                             ; 92: rfe
[0x80000120]        0x275a0004  addiu $26, $26, 4               ; 93: addiu $k0 $k0 4 # Return to next instruction
[0x80000124]        0x03400008  jr $26                          ; 94: jr $k0


Data Segment
=========================

        DATA
[0x10000000]...[0x1000fffc]        0x00000000
[0x1000fffc]                        0x00000000
[0x10010000]                        0xf4f3f2f1  0xf8f7f6f5  0xfcfbfaf9  0x00fffefd
[0x10010010]                        0x04030201  0x08070605  0x0c0b0a09  0x000f0e0d
[0x10010020]...[0x10040000]        0x00000000

        STACK
[0x7fffeffc]                        0x00000000

        KERNEL DATA
[0x90000000]                        0x78452020  0x74706563  0x206e6f69  0x636f2000
[0x90000010]                        0x72727563  0x61206465  0x6920646e  0x726f6e67
[0x90000020]                        0x000a6465  0x495b2020  0x7265746e  0x74707572
[0x90000030]                        0x0000205d  0x20200000  0x616e555b  0x6e67696c
[0x90000040]                        0x61206465  0x65726464  0x69207373  0x6e69206e
[0x90000050]                        0x642f7473  0x20617461  0x63746566  0x00205d68
[0x90000060]                        0x555b2020  0x696c616e  0x64656e67  0x64646120
[0x90000070]                        0x73736572  0x206e6920  0x726f7473  0x00205d65
[0x90000080]                        0x425b2020  0x61206461  0x65726464  0x69207373
[0x90000090]                        0x6574206e  0x72207478  0x5d646165  0x20200020
[0x900000a0]                        0x6461425b  0x64646120  0x73736572  0x206e6920
[0x900000b0]                        0x61746164  0x6174732f  0x72206b63  0x5d646165
[0x900000c0]                        0x20200020  0x7272455b  0x6920726f  0x7973206e
[0x900000d0]                        0x6c616373  0x00205d6c  0x425b2020  0x6b616572
[0x900000e0]                        0x6e696f70  0x00205d74  0x525b2020  0x72657365
[0x900000f0]                        0x20646576  0x74736e69  0x74637572  0x5d6e6f69
[0x90000100]                        0x20000020  0x72415b20  0x6d687469  0x63697465
[0x90000110]                        0x65766f20  0x6f6c6672  0x00205d77  0x495b2020
[0x90000120]                        0x6178656e  0x66207463  0x74616f6c  0x20676e69
[0x90000130]                        0x6e696f70  0x65722074  0x746c7573  0x2000205d
[0x90000140]                        0x6e495b20  0x696c6176  0x6c662064  0x6974616f
[0x90000150]                        0x7020676e  0x746e696f  0x73657220  0x5d746c75
[0x90000160]                        0x20200020  0x7669445b  0x20656469  0x30207962
[0x90000170]                        0x2000205d  0x6c465b20  0x6974616f  0x7020676e
[0x90000180]                        0x746e696f  0x65766f20  0x6f6c6672  0x00205d77
[0x90000190]                        0x465b2020  0x74616f6c  0x20676e69  0x6e696f70
[0x900001a0]                        0x6e752074  0x66726564  0x5d776f6c  0x00000020
[0x900001b0]                        0x90000024  0x90000033  0x90000034  0x90000035
[0x900001c0]                        0x90000036  0x90000060  0x90000080  0x9000009e
[0x900001d0]                        0x900000c2  0x900000d8  0x900000e8  0x90000102
[0x900001e0]                        0x90000103  0x9000011c  0x9000013f  0x90000162
[0x900001f0]                        0x90000173  0x90000190  0x00000000  0x00000000
[0x90000200]...[0x90010000]        0x00000000


